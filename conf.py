# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('_extensions'))


# -- Project information -----------------------------------------------------
import datetime
project = 'AGSHelp'
copyright = '%s, AGS Team' % datetime.datetime.now().year
author = 'AGS Team'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = '3.5.0'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['m2r', 'h2r']

# Settings for m2r
m2r_parse_relative_links = True
m2r_disable_inline_math = True

# Settings for h2r
h2r_toc_from_doc = 'source/Home.md'
h2r_script_object_from_header = r'^(\w+) ([Pp]roperties|[Ff]unctions)'
h2r_script_object_force_global = {
    'Display': [
        'Display',
        'DisplayAt',
        'DisplayAtY',
        'DisplayMessage',
        'DisplayMessageAtY',
        'DisplayTopBar'
    ],
    'Game': [
        'AbortGame',
        'CallRoomScript',
        'ClaimEvent',
        'Debug',
        'DeleteSaveSlot',
        'DisableInterface',
        'EnableInterface',
        'EndCutscene',
        'GetGameOption',
        'GetGameParameter',
        'GetGameSpeed',
        'GetGlobalInt',
        'GetGraphicalVariable',
        'GetLocationType',
        'GetTextHeight',
        'GetTextWidth',
        'GetTranslation',
        'GiveScore',
        'GetFontHeight',
        'GetFontLineSpacing',
        'InventoryScreen',
        'IsGamePaused',
        'IsInterfaceEnabled',
        'IsInteractionAvailable',
        'IsKeyPressed',
        'IsTimerExpired',
        'IsTranslationAvailable',
        'MoveCharacterToHotspot',
        'MoveCharacterToObject',
        'PauseGame',
        'QuitGame',
        'Random',
        'RestartGame',
        'RestoreGameDialog',
        'RestoreGameSlot',
        'RunAGSGame',
        'SaveGameDialog',
        'SaveGameSlot',
        'SaveScreenShot',
        'SetAmbientLightLevel',
        'SetAmbientTint',
        'SetGameOption',
        'SetGameSpeed',
        'SetGlobalInt',
        'SetGraphicalVariable',
        'SetMultitaskingMode',
        'SetRestartPoint',
        'SetTextWindowGUI',
        'SetTimer',
        'SkipUntilCharacterStops',
        'StartCutscene',
        'UpdateInventory',
        'UnPauseGame',
        'Wait',
        'WaitKey',
        'WaitMouseKey'
    ],
    'Room': [
        'AreThingsOverlapping',
        'DisableGroundLevelAreas',
        'EnableGroundLevelAreas',
        'GetBackgroundFrame',
        'GetPlayerCharacter',
        'GetScalingAt',
        'GetViewportX',
        'GetViewportY',
        'GetWalkableAreaAt',
        'HasPlayerBeenInRoom',
        'ReleaseViewport',
        'RemoveWalkableArea',
        'ResetRoom',
        'RestoreWalkableArea',
        'SetAreaScaling',
        'SetBackgroundFrame',
        'SetViewport',
        'SetWalkBehindBase'
    ]
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.md', '.rst']

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
# exclude_patterns = []
exclude_patterns = ['_Sidebar.md', 'Home.md']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
	'sidebar_header': '#2b72c5',
	'logo': 'logo.png',
	'show_related': True,
	'font_size': '14px',
	'caption_font_size': '14px',
	'code_font_size': '14px'
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    '**': [
        'about.html',
    	'searchbox.html',
        'relations.html',  # needs 'show_related': True theme option to display
        'extralinks.html',
        'localtoc.html'
    ],
    'index': [
        'about.html',
    	'searchbox.html',
    	'relations.html',
        'extralinks.html'
    ]
}

# Format for the variable last_updated (None if not set)
html_last_updated_fmt = '%c'

html_favicon = '_static/favicon.ico'

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'AGSHelpdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'AGSHelp.tex', 'AGSHelp Documentation',
     'authorname', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'agshelp', 'AGSHelp Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'AGSHelp', 'AGSHelp Documentation',
     author, 'AGSHelp', 'One line description of project.',
     'Miscellaneous'),
]
